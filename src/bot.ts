import dotenv from 'dotenv';
import { Telegraf, session } from 'telegraf';
import { searchHandler, startHandler, textHandler } from './handlers/index.js';
import {
	airportFromHandler,
	airportToHandler,
	dateSelectionHandler,
	doneHandler,
	nextMonthHandler,
	prevMonthHandler,
} from './handlers/selectionHandlers.js';
import type { MyContext } from './types.js';
import logger from './utils/logger.js';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
const dotenvResult = dotenv.config();
if (dotenvResult.error) {
	// –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ .env —Ñ–∞–π–ª–∞, –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
	logger.error({ err: dotenvResult.error }, 'Error loading .env file ‚ö†Ô∏è');
	process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.BOT_TOKEN) {
	// –ï—Å–ª–∏ BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
	logger.error('BOT_TOKEN not found in environment variables ‚ö†Ô∏è');
	process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞ —Å BOT_TOKEN –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const bot = new Telegraf<MyContext>(process.env.BOT_TOKEN);

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ middleware session –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏ –º–µ–∂–¥—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è–º–∏
bot.use(session());

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ –¥–µ–π—Å—Ç–≤–∏–π
bot.start(startHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∞–ª–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
bot.action('START_SEARCH', searchHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–∫–∏ "START_SEARCH" –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞
bot.on('text', textHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤—ã–±–æ—Ä–∞, —Ç–∞–∫–∏—Ö –∫–∞–∫ –≤—ã–±–æ—Ä –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –∏–ª–∏ –¥–∞—Ç
bot.action(/SELECT_FROM_(?<airportCode>[A-Z]{3})/, airportFromHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –≤—ã–ª–µ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –∫–æ–¥–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞
bot.action(/SELECT_TO_(?<airportCode>[A-Z]{3})/, airportToHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –∫–æ–¥–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞
bot.action(/SELECT_DATE_(?<date>\d{4}-\d{2}-\d{2})/, dateSelectionHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
bot.action('DONE', doneHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
bot.action(/PREV_MONTH_(?<year>\d{4})_(?<month>\d{1,2})/, prevMonthHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –≥–æ–¥–∞ –∏ –º–µ—Å—è—Ü–∞
bot.action(/NEXT_MONTH_(?<year>\d{4})_(?<month>\d{1,2})/, nextMonthHandler); // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –≥–æ–¥–∞ –∏ –º–µ—Å—è—Ü–∞

/* eslint-disable promise/prefer-await-to-callbacks */
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –≤ –±–æ—Ç–µ
bot.catch(async (error, ctx) => {
	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	logger.error({ err: error, update_id: ctx.update.update_id }, 'An error occurred while processing the update ‚ùå');
});
/* eslint-enable promise/prefer-await-to-callbacks */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async function launchBot() {
	try {
		logger.info('Launching bot... üöÄ');
		await bot.launch(); // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
	} catch (error) {
		// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å, –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
		logger.error({ err: error }, 'Error launching the bot ‚ùå');
		process.exit(1);
	}
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
void launchBot();
logger.info('Bot launched successfully! ‚úÖ');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
process.once('SIGINT', () => {
	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ SIGINT (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Ctrl+C), –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
	logger.warn('Received SIGINT, stopping bot ‚úã');
	bot.stop();
	process.exit(0);
});

process.once('SIGTERM', () => {
	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ SIGTERM (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞), –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
	logger.warn('Received SIGTERM, stopping bot ‚úã');
	bot.stop();
	process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –ø—Ä–æ–º–∏—Å–æ–≤ –∏ –Ω–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ö –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
process.on('unhandledRejection', (reason, promise) => {
	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
	logger.error({ promise, reason }, 'Unhandled promise rejection ‚ö†Ô∏è');
	process.exit(1);
});

process.on('uncaughtException', (error) => {
	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
	logger.error({ err: error }, 'Unhandled exception ‚ùå');
	process.exit(1);
});
