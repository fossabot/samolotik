import type { Middleware } from 'telegraf';
import type { SessionData } from '../sessionData.js';
import type { MyContext } from '../types.js';
import logger from './logger.js';

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É —á–∞—Ç–∞
const sessionStore = new Map<number, SessionData>();

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export const sessionMiddleware: Middleware<MyContext> = async (ctx, next) => {
	// –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
	const chatId = ctx.chat?.id;
	logger.debug('[üõÇ] Chat ID:', chatId);

	// –ï—Å–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
	if (chatId === undefined) {
		logger.warn('[‚ö†Ô∏è] Chat ID is undefined, proceeding to next middleware.');
		return next();
	}

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç,
	// –ª–∏–±–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ —Å —Ç–µ–∫—É—â–∏–º –≥–æ–¥–æ–º –∏ –º–µ—Å—è—Ü–µ–º
	ctx.session = sessionStore.get(chatId) ?? {
		calendarYear: new Date().getFullYear(), // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
		calendarMonth: new Date().getMonth(), // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
	};
	logger.debug('[üìö] Session data for chat:', ctx.session);

	// –í—ã–ø–æ–ª–Ω—è–µ–º —Å–ª–µ–¥—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é middleware –≤ —Ü–µ–ø–æ—á–∫–µ
	await next();

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
	sessionStore.set(chatId, ctx.session);
	logger.info('[üìö] Updated session data saved for chat:', chatId, ctx.session);
};
