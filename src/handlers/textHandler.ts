import type { Message, Update } from '@telegraf/types';
import type { NarrowedContext } from 'telegraf';
import { Markup } from 'telegraf';
import { getAirports } from '../services/getAirports.js';
import type { MyContext } from '../types.js';
import { generateCalendarMarkup } from '../utils/calendar.js';
import logger from '../utils/logger.js';

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const textHandler = async (ctx: NarrowedContext<MyContext, Update.MessageUpdate<Message.TextMessage>>) => {
	try {
		// –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
		logger.debug('[‚úèÔ∏è] Processing user text message...');

		// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑ —Å–µ—Å—Å–∏–∏
		const step = ctx.session.step;

		// –ï—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
		if (step === 'from_city') {
			const city = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			if (!city) {
				// –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –±—ã–ª —É–∫–∞–∑–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
				logger.warn('[‚ùå] City was not specified.');
				await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è.');
				return;
			}

			logger.info(`[‚úàÔ∏è] Departure city: ${city}.`);

			try {
				// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
				logger.debug(`[üîç] Request a list of airports for the city: ${city}.`);
				const airports = await getAirports(city);
				if (!airports || airports.length === 0) {
					// –ï—Å–ª–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					logger.warn('[‚ùå] No airports found.');
					await ctx.reply('–ê—ç—Ä–æ–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥.');
					return;
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –∏ —Å–ø–∏—Å–æ–∫ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –≤ —Å–µ—Å—Å–∏—é –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
				ctx.session = {
					...ctx.session,
					fromCity: city,
					airportsFrom: airports,
					step: 'from_airport_selection',
				};

				// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∞—ç—Ä–æ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
				logger.debug('[‚úàÔ∏è] Prompt user for selection of departure airport.');
				const airportButtons = airports.map((airport) => [airport.name]);
				await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', Markup.keyboard(airportButtons).oneTime().resize());
			} catch (error) {
				// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
				logger.error('[‚ùå] Error retrieving the list of airports:', error);
				await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.');
			}
		} else if (step === 'from_airport_selection') {
			// –ï—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
			const selectedAirportName = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			const airport = ctx.session.airportsFrom?.find((a) => a.name === selectedAirportName); // –ò—â–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç –ø–æ –∏–º–µ–Ω–∏ –≤ —Å–ø–∏—Å–∫–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤

			if (!airport) {
				// –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');
				return;
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É - –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è
			ctx.session = {
				...ctx.session,
				fromAirport: airport.code,
				step: 'to_city',
			};

			await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è:', Markup.removeKeyboard()); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
		} else if (step === 'to_city') {
			// –ï—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è
			const city = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			if (!city) {
				// –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –±—ã–ª —É–∫–∞–∑–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
				logger.warn('[‚ö†Ô∏è] City not specified.');
				await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è.');
				return;
			}

			logger.info(`[üõ¨] Arrival city: ${city}.`);

			try {
				// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
				logger.debug(`[üìù] Request a list of airports for the city: ${city}.`);
				const airports = await getAirports(city);
				if (!airports || airports.length === 0) {
					// –ï—Å–ª–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
					logger.warn('[‚ùå] No airports found.');
					await ctx.reply('–ê—ç—Ä–æ–ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥.');
					return;
				}

				// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –∏ —Å–ø–∏—Å–æ–∫ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤ –≤ —Å–µ—Å—Å–∏—é –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
				ctx.session = {
					...ctx.session,
					toCity: city,
					airportsTo: airports,
					step: 'to_airport_selection',
				};

				// –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∞—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
				logger.debug('[üõ¨] Invitation to the user to select the airport of arrival.');
				const airportButtons = airports.map((airport) => [airport.name]);
				await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è:', Markup.keyboard(airportButtons).oneTime().resize());
			} catch (error) {
				// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤
				logger.error('[‚ùå] Error when retrieving a list of airports:', error);
				await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.');
			}
		} else if (step === 'to_airport_selection') {
			// –ï—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è
			const selectedAirportName = ctx.message.text.trim(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
			const airport = ctx.session.airportsTo?.find((a) => a.name === selectedAirportName); // –ò—â–µ–º –∞—ç—Ä–æ–ø–æ—Ä—Ç –ø–æ –∏–º–µ–Ω–∏ –≤ —Å–ø–∏—Å–∫–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç–æ–≤

			if (!airport) {
				// –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
				await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.');
				return;
			}

			// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É - –≤—ã–±–æ—Ä –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞
			ctx.session = {
				...ctx.session,
				toAirport: airport.code,
				step: 'select_date',
			};

			await ctx.reply('–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞:', Markup.removeKeyboard()); // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞

			// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
			const calendarMarkup = generateCalendarMarkup(
				ctx.session.selectedDates ?? [],
				ctx.session.calendarYear ?? new Date().getFullYear(),
				ctx.session.calendarMonth ?? new Date().getMonth(),
			);

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–∑–º–µ—Ç–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è
			await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã:', calendarMarkup);
		} else if (step === 'select_date') {
			// –ï—Å–ª–∏ —à–∞–≥ - –≤—ã–±–æ—Ä –¥–∞—Ç—ã –≤—ã–ª–µ—Ç–∞, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç, –ø—Ä–æ—Å–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
			await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å.');
		} else {
			// –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —à–∞–≥ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –ø—Ä–æ—Å–∏–º —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
			await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞.');
		}
	} catch (error) {
		// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
		logger.error('[‚ùå] Error while processing a text message:', error);
		await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
	}
};
